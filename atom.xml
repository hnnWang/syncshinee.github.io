<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sync Shinee]]></title>
  <link href="http://SyncShinee.github.io/atom.xml" rel="self"/>
  <link href="http://SyncShinee.github.io/"/>
  <updated>2014-07-13T17:18:11+08:00</updated>
  <id>http://SyncShinee.github.io/</id>
  <author>
    <name><![CDATA[Sync Shinee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HandyBUAA开发笔记（一）]]></title>
    <link href="http://SyncShinee.github.io/blog/2014/07/13/developnote1/"/>
    <updated>2014-07-13T15:17:57+08:00</updated>
    <id>http://SyncShinee.github.io/blog/2014/07/13/developnote1</id>
    <content type="html"><![CDATA[<p>这个暑假，原定的通过新版vpn爬课表的开发计划由于学校对移动版vpn的支持一直有问题而搁浅。于是<code>Ken Yu</code>学长让我定了一个新的开发计划：社团公告系统。他负责搞后台那部分，手机端的任务由我来制定，并和另外两名同学分配以下。最后，我分到的任务是完成社团公告系统的列表界面。通过这两天的努力，我这部分的任务基本完成了。下面就记录以下我这两天的成果吧～</p>

<!-- more -->


<h2>开发记录</h2>

<ol>
<li><strong>与SlidingMenu的交互。</strong>

<ul>
<li>我们的HandyBUAA引入了开源项目<a href="https://github.com/jfeinstein10/SlidingMenu">SlidingMenu</a>，因此要添加社团公告系统的列表就要SlidingMenu里面添加相应的模块并完成新activity与SlidingMenu的交互。</li>
<li>往SlidingMenu里添加新模块可以直接在xml文件里完成。通过阅读已有的代码，我明白了SlidingMenu与activity交互的机制。</li>
<li>首先为要添加的activity创建一个fragment，这个fragment继承于一个总的MainMenuFragment，在总的fragment里，我们对相应的SlidingMenu模块的点击事件作出判断并响应。在新建的fragment里也进行应有的响应。然后让这个activity实现这个fragment。这样，这个功能就实现了。</li>
</ul>
</li>
<li><strong>列表内容的获取与投放</strong>

<ul>
<li>要完成数据的创建、获取和投放，首先你要有这个数据类型……所以最先进行的就是定义数据类型，定义数据库组成等等，有点无聊。</li>
<li>投放的时候，首先，把数据从数据库中取出（如果有的话），通过sql语句来完成，将数据取出放在Cursor里，然后再把Cursor中的数据打包放入LinkedList中。之后通过一个ViewAdapter把LinkedList中的数据放到一个名为RefreshListView的由ListView派生的View里面，这个特殊的ListView是由学长们封装好的，它可以支持下拉刷新和加载更多功能。</li>
<li>最后添加数据刷新和点击打开相应公告的详细信息的功能。数据刷新通过一个AsyncTask类实现。点击打开详细信息的功能直接给ListView添加OnItemClickListener方法就可以了。</li>
</ul>
</li>
</ol>


<p>附截图（由于HandyBUAA不是开源项目，就不附源码了）
<img src="http://SyncShinee.github.io/images/14-07-13/HandyBUAA.png" alt="pic" />
<img src="http://SyncShinee.github.io/images/14-07-13/HandyBUAAsocietynotice.png" alt="pic1" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的Octopress博客]]></title>
    <link href="http://SyncShinee.github.io/blog/2014/06/15/wo-de-octopressbo-ke/"/>
    <updated>2014-06-15T18:35:12+08:00</updated>
    <id>http://SyncShinee.github.io/blog/2014/06/15/wo-de-octopressbo-ke</id>
    <content type="html"><![CDATA[<p>很早之前就想自己搭一个博客了，但由于各种原因总是没有成功。在学长的推荐下，我发现了一款强大的博客系统——Octopress。它是一款基于Jekyll的内容管理工具，可以方便的搭建站点和发布静态页面。号称是hacker专属的一个博客系统(A blogging framework for hackers)。亲自体验后，我发现它可以让你<strong>像写代码一样写博客</strong>。</p>

<!-- more -->


<p>好了，废话少说，我就记录下我在<em>fedora20</em>环境下搭建Octopress的过程吧。</p>

<h2>1. 安装Ruby</h2>

<p>Octopress需要Ruby环境，RVM(Ruby Version Manager)负责安装和管理Ruby的环境。所以我们先在终端输入如下命令，来安装RVM：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://get.rvm.io | bash -s stable --ruby
</span></code></pre></td></tr></table></div></figure>


<p>然后根据提示运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> /etc/profile.d/rvm.sh
</span></code></pre></td></tr></table></div></figure>


<p>即可完成安装。这时运行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby --version
</span></code></pre></td></tr></table></div></figure>


<p>发现显示</p>

<blockquote><p>ruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-linux]`</p></blockquote>

<p>证明Ruby安装成功</p>

<ul>
<li>如果Ruby版本小于1.9.3，则需用RVM安装Ruby1.9.3</li>
</ul>


<h2>2. 安装Octopress</h2>

<p>Ruby安装完成后，我们可以开始安装Octopress了。
首先，把Octopress项目clone到本地并进入Octopress目录。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<p>之后我们需要安装依赖</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>最后安装Octopress默认主题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>gem安装bundler的过程会比较慢，因为gem的默认安装源在国外。我们可以耐心等一等，如果想换源请自行google</li>
<li>如果使用<code>yum install ruby</code>命令安装ruby，在运行<code>gem install bundler</code>时会报错，这是由于yum安装Ruby并未将gem所需的所有依赖安装完整。因此请尽量使用RVM安装</li>
</ul>


<h2>3. 将博客部署到github</h2>

<p>首先，我们需要在github上创建一个个人blog的仓库（相关操作请自行google）
创建好仓库后我们可以利用octopress的一个配置rake任务来自动配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake  setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>上面的命令会做一些事情，其中最主要的就是创建一个_deploy目录，目录用来存放部署到master分支的内容。期间会要求你输入仓库的url，根据提示，进行输入即可。
之后执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>这两行命令首先生成博客文件，并将生成的博客文件拷贝到_deploy/目录下，然后将这些内容添加到git中，并commit和push到仓库的master分支。至此，博客的部署基本完成，不过博客的source需要单独提交，执行如下命令就可以将source提交到仓库的source分支下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;Initial source commit&#39;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>之后就是博客的配置工作了。Octopress有很多第三方主题，我使用的是一个极简风格的主题dotmin。博文支持现在很流行的markdown语法，这里推荐一款在线编辑markdown文件的编辑器<a href="http://dillinger.io">dillinger</a>
<img src="http://img.my.csdn.net/uploads/201302/27/1361970185_6834.png" alt="dillinger" />
它支持即时预览且预览速度较快，不过只能联网编辑，linux下的markdown编辑器我推荐<a href="http://pad.haroopress.com/user.html">haroopad</a>
<img src="http://pad.haroopress.com/assets/images/intro/2.png" alt="haroopad" /></p>

<p>它支持 Windows、Mac OS X 和 Linux。 主题样式丰富，语法标亮支持 54 种编程语言。其邮件导出功能可以将文档发送到 Tumblr 和 Evernote。这款产品由一位韩国人开发的，网站上的一部份帮助文档也是韩文。</p>

<h2>4. 接下来会写什么</h2>

<ul>
<li>ACM解题报告</li>
<li>学习记录</li>
<li>其他感兴趣的</li>
</ul>


<p>总之，一个博客搭好只是一个开始，重要的是一直坚持写下去。加油。</p>
]]></content>
  </entry>
  
</feed>
